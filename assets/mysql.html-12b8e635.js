import{_ as n,p as s,q as a,a1 as t}from"./framework-1c630d00.js";const p={},e=t(`<h2 id="node连接mysql" tabindex="-1"><a class="header-anchor" href="#node连接mysql" aria-hidden="true">#</a> node连接mysql</h2><h3 id="连接mysql" tabindex="-1"><a class="header-anchor" href="#连接mysql" aria-hidden="true">#</a> 连接Mysql</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> mysql <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> connection <span class="token operator">=</span> mysql<span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;47.96.236.204&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;alphabet&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">database</span><span class="token operator">:</span> <span class="token string">&#39;stu_list&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">multipleStatements</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开始多条查询语句</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
connection<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
connection<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多条sql" tabindex="-1"><a class="header-anchor" href="#多条sql" aria-hidden="true">#</a> 多条sql</h3><ul><li>多条 sql 分号隔开, results[results[0],results[1],...] 对应的查询结果，自行拼接数据结构;</li><li>根据参数来查询，用 ‘?’ 来占位，connection.query 第二个参数是数组对应的查询参数. [params1,params2,...];</li><li>分页查询使用 <code>limit</code> 查询，<code>mysql</code> 分页查询是从 0 开始的，需要 node 处理一下;</li><li><strong>get 请求获取的参数是 string,对应的 pageSize 和 pageNo 需要转换为 Number 类型；</strong></li><li><code>SELECT COUNT(*) as total FROM stu_list</code> 使用别名在 results 中好获取;</li><li>模糊查询需要在参数里加 ‘%’;</li><li>多表新建需要关联时使用 <strong>LAST_INSERT_ID()</strong> 来获取插入的 id;</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> pageNo<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">;</span>
<span class="token keyword">const</span> sql <span class="token operator">=</span>
  <span class="token string">&#39;SELECT * FROM stu_list limit ?,?;SELECT COUNT(*) as total FROM stu_list;SELECT * FROM stu_pos&#39;</span><span class="token punctuation">;</span>
connection<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>
  sql<span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token punctuation">(</span>pageNo <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize<span class="token punctuation">,</span> pageSize<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> results<span class="token punctuation">,</span> fields</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">throw</span> error<span class="token punctuation">;</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">total</span><span class="token operator">:</span> results<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>total<span class="token punctuation">,</span>
        <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token literal-property property">pageNo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","mysql.html.vue"]]);export{r as default};
