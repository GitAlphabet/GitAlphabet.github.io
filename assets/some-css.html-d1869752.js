import{_ as n,p as s,q as a,a1 as e}from"./framework-ebd9a7c2.js";const t={},i=e(`<h2 id="css-部分属性" tabindex="-1"><a class="header-anchor" href="#css-部分属性" aria-hidden="true">#</a> CSS 部分属性</h2><h3 id="background-attachment" tabindex="-1"><a class="header-anchor" href="#background-attachment" aria-hidden="true">#</a> background-attachment</h3><p>如果文档比较长，那么当文档向下滚动时，背景图像也会随之滚动。当文档滚动到超过图像的位置时，图像就会消失。 您可以通过 <code>background-attachment</code> 属性防止这种滚动。通过这个属性，可以声明图像相对于可视区是固定的（fixed），因此不会受到滚动的影响：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">background-attachment</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="webkit-line-clamp" tabindex="-1"><a class="header-anchor" href="#webkit-line-clamp" aria-hidden="true">#</a> -webkit-line-clamp</h3><p>可以把 块容器 中的内容限制为指定的行数。并且在超过行数后，在最后一行显示&quot;...&quot;</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span> <span class="token comment">/*值必须为-webkit-box或者-webkit-inline-box*/</span>
<span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span> <span class="token comment">/*值必须为vertical*/</span>
<span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token comment">/*值为数字，表示一共显示几行*/</span>
<span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="caret-color" tabindex="-1"><a class="header-anchor" href="#caret-color" aria-hidden="true">#</a> caret-color</h3><p>用来定义插入光标（caret）的颜色，这里说的插入光标，就是那个在网页的可编辑器区域内，用来指示用户的输入具体会插入到哪里的那个一闪一闪的形似竖杠 | 的东西。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">caret-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="object-fit" tabindex="-1"><a class="header-anchor" href="#object-fit" aria-hidden="true">#</a> object-fit</h3><p>object-fit: 属性指定可替换元素的内容应该如何适应到其使用的高度和宽度确定的框。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">object-fit</span><span class="token punctuation">:</span> fill ｜contain ｜cover｜none<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>contain 包容 图片不会变形，图片会按照自身比例进行缩放，整个图片放入父容器中，较短的边会出现自动填充的空白。</li><li>cover 覆盖 图片不会变形，图片会按照自身比例进行缩放，整个图片放入父容器中，按照图片最短的边，纳入父容器为基准。较长的边会溢出。</li><li><code>none</code> 和父容器的宽高没关系。展示其图片最原始的宽高比，以自身图片的“中心”为基点，放置到父容器的“中心”位置。</li><li><code>scale-down</code> 内容的尺寸与 <code>none</code> 或 <code>contain</code> 中的一个相同，取决于它们两个之间谁得到的对象尺寸会更小一些。 如果图片比父容器尺寸大，那么按照 <code>contain</code> 的效果，如果图片比父容器小，那么按照 <code>none</code> 的效果。</li></ul><h3 id="object-position" tabindex="-1"><a class="header-anchor" href="#object-position" aria-hidden="true">#</a> object-position</h3><p>object-position:属性来指定被替换元素的内容对象在元素框内的对齐方式。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">object-position</span><span class="token punctuation">:</span> 10px 10px<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>可以设置 px，第一个值代表距离父容器左边的距离，第二个值代表距离父容器顶部的距离。</li><li>只有一个数值则只代表距离父容器左侧的距离。也可以设置%数值，但此时只有某一边有空白才会起作用，如果没有空白，刚好铺满父元素，则不起作用。设置 px 就没有这样的问题，任何之后都会起作用。</li><li><code>sobject-position: right top;</code>可以设置关键字，第一个值关键字可设置（left|center|right），第二个关键字可设置(top|center|bottom),此时不表示距离左侧或者顶部的距离，而表示放置在父元素的什么位置。拉变形，宽度和高度都被拉到父容器的 100%，以适应父容器</li></ul><h3 id="scroll-behavior" tabindex="-1"><a class="header-anchor" href="#scroll-behavior" aria-hidden="true">#</a> scroll-behavior</h3><p>当用户手动导航或者 CSSOM scrolling API 触发滚动操作时，CSS 属性 <code>scroll-behavior</code> 为一个滚动框指定滚动行为，其他任何的滚动，例如那些由于用户行为而产生的滚动，不受这个属性的影响。在根元素中指定这个属性时，它反而适用于视窗。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">scroll-behavior</span><span class="token punctuation">:</span> smooth | auto<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>auto</code> 滚动框立即滚动。</li><li><code>smooth</code> 滚动框通过一个用户代理预定义的时长、使用预定义的时间函数，来实现平稳的滚动，用户代理应遵循其平台的约定，如果有的话。</li></ul><h3 id="out-of-range" tabindex="-1"><a class="header-anchor" href="#out-of-range" aria-hidden="true">#</a> out-of-range</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">input:out-of-range</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.25<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="in-range" tabindex="-1"><a class="header-anchor" href="#in-range" aria-hidden="true">#</a> in-range</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">input:in-range</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.25<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>:out-of-range</code> CSS 伪类 表示一个 input 元素，其当前值处于属性 min 和 max 限定的范围外。</li><li><code>:in-range</code> CSS 伪类 表示一个 input 元素，其当前值处于属性 min 和 max 限定的范围内。</li></ul><h3 id="content-visibility" tabindex="-1"><a class="header-anchor" href="#content-visibility" aria-hidden="true">#</a> content-visibility</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* Keyword values */</span>
<span class="token property">content-visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>
<span class="token property">content-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token property">content-visibility</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token comment">/* Global values */</span>
<span class="token property">content-visibility</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
<span class="token property">content-visibility</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span>
<span class="token property">content-visibility</span><span class="token punctuation">:</span> revert<span class="token punctuation">;</span>
<span class="token property">content-visibility</span><span class="token punctuation">:</span> revert-layer<span class="token punctuation">;</span>
<span class="token property">content-visibility</span><span class="token punctuation">:</span> unset<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>visible</code> 没有效果。元素的内容被正常布局和呈现。</li><li><code>hidden</code> 元素跳过它的内容。跳过的内容不能被用户代理功能访问，例如在页面中查找、标签顺序导航等，也不能被选择或聚焦。这类似于给内容<code>display: none。</code>。</li><li><code>auto</code> 该元素打开<strong>布局包含、样式包含和绘制包含</strong>。如果该元素与用户不相关，它也会跳过其内容。与 hidden 不同，跳过的内容必须仍可正常用于用户代理功能，例如在页面中查找、tab 顺序导航等，并且必须正常可聚焦和可选择。<strong>使用 auto 降低长页面的渲染成本</strong></li></ul><h3 id="contain-intrinsic-size" tabindex="-1"><a class="header-anchor" href="#contain-intrinsic-size" aria-hidden="true">#</a> contain-intrinsic-size</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* Keyword values */</span>
<span class="token property">contain-intrinsic-width</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token comment">/* &lt;length&gt; values */</span>
<span class="token property">contain-intrinsic-size</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span>
<span class="token property">contain-intrinsic-size</span><span class="token punctuation">:</span> 10rem<span class="token punctuation">;</span>
<span class="token comment">/* width | height */</span>
<span class="token property">contain-intrinsic-size</span><span class="token punctuation">:</span> 1000px 1.5em<span class="token punctuation">;</span>
<span class="token comment">/* auto &lt;length&gt; */</span>
<span class="token property">contain-intrinsic-size</span><span class="token punctuation">:</span> auto 300px<span class="token punctuation">;</span>
<span class="token comment">/* auto width | auto height */</span>
<span class="token property">contain-intrinsic-size</span><span class="token punctuation">:</span> auto 300px auto 4rem<span class="token punctuation">;</span>
<span class="token comment">/* Global values */</span>
<span class="token property">contain-intrinsic-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
<span class="token property">contain-intrinsic-size</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span>
<span class="token property">contain-intrinsic-size</span><span class="token punctuation">:</span> revert<span class="token punctuation">;</span>
<span class="token property">contain-intrinsic-size</span><span class="token punctuation">:</span> unset<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>可以为元素指定以下一个或两个值。如果指定了两个值，则第一个值适用于宽度，第二个值适用于高度。如果指定单个值，则它适用于宽度和高度</li></ul><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">filter</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;../../media/examples/shadow.svg#element-id&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>  <span class="token comment">/* 网址 */</span>
<span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">blur</span><span class="token punctuation">(</span>5px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 模糊 */</span>
<span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">brightness</span><span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 亮度 */</span>
<span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">contrast</span><span class="token punctuation">(</span>200%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 对比 */</span>
<span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span>80%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 将输入图像转换为灰度 */</span>
<span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">hue-rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 对输入图像应用色调旋转 */</span>
<span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">drop-shadow</span><span class="token punctuation">(</span>16px 16px 20px red<span class="token punctuation">)</span> <span class="token function">invert</span><span class="token punctuation">(</span>75%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 阴影 */</span>
<span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">invert</span><span class="token punctuation">(</span>100%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 反转输入图像中的样本 */</span>
<span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">opacity</span><span class="token punctuation">(</span>50%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 将透明度应用于输入图像中的样本 */</span>
<span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">saturate</span><span class="token punctuation">(</span>200%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 使输入图像饱和 */</span>
<span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">sepia</span><span class="token punctuation">(</span>100%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 将输入图像转换为棕褐 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35),c=[i];function p(o,l){return s(),a("div",null,c)}const r=n(t,[["render",p],["__file","some-css.html.vue"]]);export{r as default};
