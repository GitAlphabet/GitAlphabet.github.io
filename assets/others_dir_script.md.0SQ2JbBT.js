import{_ as a,c as i,o as e,ag as n}from"./chunks/framework.Bw-5EFTY.js";const k=JSON.parse('{"title":"脚本并配置","description":"","frontmatter":{},"headers":[],"relativePath":"others/dir/script.md","filePath":"others/dir/script.md","lastUpdated":1752806673000}'),l={name:"others/dir/script.md"};function t(p,s,h,r,d,o){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="脚本并配置" tabindex="-1">脚本并配置 <a class="header-anchor" href="#脚本并配置" aria-label="Permalink to &quot;脚本并配置&quot;">​</a></h1><h2 id="创建脚本文件" tabindex="-1">创建脚本文件 <a class="header-anchor" href="#创建脚本文件" aria-label="Permalink to &quot;创建脚本文件&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建脚本文件,存放需要执行的命令行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> demo.sh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换并编辑demo.sh文件(可以使用编辑器编辑)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> demo.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  demo.txt</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建demo文本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  demo</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建demo文件夹</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="执行脚本" tabindex="-1">执行脚本 <a class="header-anchor" href="#执行脚本" aria-label="Permalink to &quot;执行脚本&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> demo.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="自定义参数" tabindex="-1">自定义参数 <a class="header-anchor" href="#自定义参数" aria-label="Permalink to &quot;自定义参数&quot;">​</a></h2><p>添加自定义文件夹名称的命令行</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">demo.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mkdir</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #$1表示运行脚本时候 输入的第一个参数 $2代表第二个参数，以此类推</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="执行自定义参数脚本" tabindex="-1">执行自定义参数脚本 <a class="header-anchor" href="#执行自定义参数脚本" aria-label="Permalink to &quot;执行自定义参数脚本&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> demo.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lpl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">完成后，该文件下会有一个lpl的文件夹</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,10)]))}const b=a(l,[["render",t]]);export{k as __pageData,b as default};
