import{_ as t,M as p,p as e,q as o,R as n,t as s,N as l,a1 as c}from"./framework-39b99327.js";const r="/assets/reg-8f6545d1.jpg",u={},i=n("h2",{id:"regexp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#regexp","aria-hidden":"true"},"#"),s(" RegExp")],-1),k={id:"测试工具",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#测试工具","aria-hidden":"true"},"#",-1),m={href:"https://regexper.com",target:"_blank",rel:"noopener noreferrer"},b=c('<p>eg: http(s)?: //[a-z]+.[a-z]{2,3} 使用工具之后展示为： <img src="'+r+`" alt="ml.jpg"></p><h3 id="元字符" tabindex="-1"><a class="header-anchor" href="#元字符" aria-hidden="true">#</a> 元字符</h3><table><thead><tr><th style="text-align:left;">字符</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">\\</td><td style="text-align:left;">将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，&#39;n&#39; 匹配字符 &quot;n&quot;。&#39;\\n&#39; 匹配一个换行符。序列 &#39;\\&#39; 匹配 &quot;&quot; 而 &quot;(&quot; 则匹配 &quot;(&quot;。</td></tr><tr><td style="text-align:left;">^</td><td style="text-align:left;">匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 &#39;\\n&#39; 或 &#39;\\r&#39; 之后的位置。</td></tr><tr><td style="text-align:left;">$</td><td style="text-align:left;">匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 &#39;\\n&#39; 或 &#39;\\r&#39; 之前的位置。</td></tr><tr><td style="text-align:left;">*</td><td style="text-align:left;">匹配前面的子表达式零次或多次。例如，zo* 能匹配 &quot;z&quot; 以及 &quot;zoo&quot;。* 等价于{0,}。</td></tr><tr><td style="text-align:left;">+</td><td style="text-align:left;">匹配前面的子表达式一次或多次。例如，&#39;zo+&#39; 能匹配 &quot;zo&quot; 以及 &quot;zoo&quot;，但不能匹配 &quot;z&quot;。+ 等价于 {1,}。</td></tr><tr><td style="text-align:left;">?</td><td style="text-align:left;">匹配前面的子表达式零次或一次。例如，&quot;do(es)?&quot; 可以匹配 &quot;do&quot; 或 &quot;does&quot; 。? 等价于 {0,1}。</td></tr><tr><td style="text-align:left;">{n}</td><td style="text-align:left;">n 是一个非负整数。匹配确定的 n 次。例如，&#39;o{2}&#39; 不能匹配 &quot;Bob&quot; 中的 &#39;o&#39;，但是能匹配 &quot;food&quot; 中的两个 o。</td></tr><tr><td style="text-align:left;">{n,}</td><td style="text-align:left;">n 是一个非负整数。至少匹配n 次。例如，&#39;o{2,}&#39; 不能匹配 &quot;Bob&quot; 中的 &#39;o&#39;，但能匹配 &quot;foooood&quot; 中的所有 o。&#39;o{1,}&#39; 等价于 &#39;o+&#39;。&#39;o{0,}&#39; 则等价于 &#39;o*&#39;。</td></tr><tr><td style="text-align:left;">{n,m}</td><td style="text-align:left;">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，&quot;o{1,3}&quot; 将匹配 &quot;fooooood&quot; 中的前三个 o。&#39;o{0,1}&#39; 等价于 &#39;o?&#39;。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td style="text-align:left;">?</td><td style="text-align:left;">当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 &quot;oooo&quot;，&#39;o+?&#39; 将匹配单个 &quot;o&quot;，而 &#39;o+&#39; 将匹配所有 &#39;o&#39;。</td></tr><tr><td style="text-align:left;">.</td><td style="text-align:left;">匹配除换行符（\\n、\\r）之外的任何单个字符。要匹配包括 &#39;\\n&#39; 在内的任何字符，请使用像&quot;(.</td></tr><tr><td style="text-align:left;">(pattern)</td><td style="text-align:left;">匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 &#39;(&#39; 或 &#39;)&#39;。</td></tr><tr><td style="text-align:left;">x|y</td><td style="text-align:left;">匹配 x 或 y。例如，&#39;z</td></tr><tr><td style="text-align:left;">[xyz]</td><td style="text-align:left;">字符集合。匹配所包含的任意一个字符。例如， &#39;[abc]&#39; 可以匹配 &quot;plain&quot; 中的 &#39;a&#39;。</td></tr><tr><td style="text-align:left;">[^xyz]</td><td style="text-align:left;">负值字符集合。匹配未包含的任意字符。例如， &#39;[^abc]&#39; 可以匹配 &quot;plain&quot; 中的&#39;p&#39;、&#39;l&#39;、&#39;i&#39;、&#39;n&#39;。</td></tr><tr><td style="text-align:left;">[a-z]</td><td style="text-align:left;">字符范围。匹配指定范围内的任意字符。例如，&#39;[a-z]&#39; 可以匹配 &#39;a&#39; 到 &#39;z&#39; 范围内的任意小写字母字符。</td></tr><tr><td style="text-align:left;">[^a-z]</td><td style="text-align:left;">负值字符范围。匹配任何不在指定范围内的任意字符。例如，&#39;[^a-z]&#39; 可以匹配任何不在 &#39;a&#39; 到 &#39;z&#39; 范围内的任意字符。</td></tr><tr><td style="text-align:left;">\\b</td><td style="text-align:left;">匹配非单词边界。&#39;er\\B&#39; 能匹配 &quot;verb&quot; 中的 &#39;er&#39;，但不能匹配 &quot;never&quot; 中的 &#39;er&#39;。</td></tr><tr><td style="text-align:left;">\\B</td><td style="text-align:left;">匹配非单词边界。&#39;er\\B&#39; 能匹配 &quot;verb&quot; 中的 &#39;er&#39;，但不能匹配 &quot;never&quot; 中的 &#39;er&#39;。</td></tr><tr><td style="text-align:left;">\\d</td><td style="text-align:left;">匹配一个数字字符。等价于 [0-9]。</td></tr><tr><td style="text-align:left;">\\D</td><td style="text-align:left;">匹配一个非数字字符。等价于 [^0-9]。</td></tr><tr><td style="text-align:left;">\\s</td><td style="text-align:left;">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \\f\\n\\r\\t\\v]。</td></tr><tr><td style="text-align:left;">\\S</td><td style="text-align:left;">匹配任何非空白字符。等价于 [^ \\f\\n\\r\\t\\v]。</td></tr><tr><td style="text-align:left;">\\w</td><td style="text-align:left;">匹配字母、数字、下划线。等价于&#39;[A-Za-z0-9_]&#39;。</td></tr><tr><td style="text-align:left;">\\W</td><td style="text-align:left;">匹配非字母、数字、下划线。等价于 &#39;[^A-Za-z0-9_]&#39;。</td></tr><tr><td style="text-align:left;">\\f</td><td style="text-align:left;">匹配一个换页符。等价于 \\x0c 和 \\cL。</td></tr><tr><td style="text-align:left;">\\n</td><td style="text-align:left;">匹配一个换行符。等价于 \\x0a 和 \\cJ。</td></tr><tr><td style="text-align:left;">\\r</td><td style="text-align:left;">匹配一个换行符。等价于 \\x0a 和 \\cJ。</td></tr><tr><td style="text-align:left;">\\t</td><td style="text-align:left;">匹配一个制表符。等价于 \\x09 和 \\cI。</td></tr><tr><td style="text-align:left;">\\v</td><td style="text-align:left;">匹配一个垂直制表符。等价于 \\x0b 和 \\cK。</td></tr><tr><td style="text-align:left;">\\xn</td><td style="text-align:left;">匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，&#39;\\x41&#39; 匹配 &quot;A&quot;。&#39;\\x041&#39; 则等价于 &#39;\\x04&#39; &amp; &quot;1&quot;。正则表达式中可以使用 ASCII 编码。</td></tr><tr><td style="text-align:left;">\\num</td><td style="text-align:left;">匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，&#39;(.)\\1&#39; 匹配两个连续的相同字符。</td></tr><tr><td style="text-align:left;">\\nm</td><td style="text-align:left;">标识一个八进制转义值或一个向后引用。如果 \\nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \\nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \\nm 将匹配八进制转义值 nm。</td></tr><tr><td style="text-align:left;">\\nml</td><td style="text-align:left;">如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。</td></tr><tr><td style="text-align:left;">\\un</td><td style="text-align:left;">匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \\u00A9 匹配版权符号 (?)。</td></tr><tr><td style="text-align:left;">(?:pattern)</td><td style="text-align:left;">匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 &quot;或&quot; 字符 (</td></tr><tr><td style="text-align:left;">(?=pattern)</td><td style="text-align:left;">正向肯定预查（look ahead positive assert），在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，&quot;Windows(?=95</td></tr><tr><td style="text-align:left;">(?!pattern)</td><td style="text-align:left;">正向否定预查(negative assert)，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如&quot;Windows(?!95</td></tr><tr><td style="text-align:left;">(?&lt;=pattern)</td><td style="text-align:left;">反向(look behind)肯定预查，与正向肯定预查类似，只是方向相反。例如，&quot;(?&lt;=95</td></tr><tr><td style="text-align:left;">(?&lt;!pattern)</td><td style="text-align:left;">反向否定预查，与正向否定预查类似，只是方向相反。例如&quot;(?&lt;!95</td></tr></tbody></table><h3 id="运算符优先级" tabindex="-1"><a class="header-anchor" href="#运算符优先级" aria-hidden="true">#</a> 运算符优先级</h3><p>正则表达式从左到右进行计算，并遵循优先级顺序，这与算术表达式非常类似。 相同优先级的从左到右进行运算，不同优先级的运算先高后低。下表从最高到最低说明了各种正则表达式运算符的优先级顺序：</p><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">\\</td><td style="text-align:left;">转义符</td></tr><tr><td style="text-align:center;">(), (?: ), (?=), []</td><td style="text-align:left;">圆括号和方括号</td></tr><tr><td style="text-align:center;">*, +, ?, {n}, {n,}, {n,m}</td><td style="text-align:left;">限定符</td></tr><tr><td style="text-align:center;">^, $, \\任何元字符、任何字符</td><td style="text-align:left;">定位点和序列（即：位置和顺序）</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">字符具有高于替换运算符的优先级，使得&quot;m</td><td style="text-align:left;">food&quot;匹配&quot;m&quot;或&quot;food&quot;。若要匹配&quot;mood&quot;或&quot;food&quot;，请使用括号创建子表达式，从而产生&quot;(m</td></tr></tbody></table><h3 id="常用的正则表达式" tabindex="-1"><a class="header-anchor" href="#常用的正则表达式" aria-hidden="true">#</a> 常用的正则表达式</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>一、校验数字的表达式
<span class="token comment">// 数字：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>$<span class="token operator">/</span>

<span class="token comment">// n位的数字：</span>
<span class="token operator">/</span><span class="token operator">^</span>\\d<span class="token punctuation">{</span>n<span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// 至少n位的数字：</span>
<span class="token operator">/</span><span class="token operator">^</span>\\d<span class="token punctuation">{</span>n<span class="token punctuation">,</span><span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// m-n位的数字：</span>
<span class="token operator">/</span><span class="token operator">^</span>\\d<span class="token punctuation">{</span>m<span class="token punctuation">,</span>n<span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// 非零开头的最多带两位小数的数字：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">?</span>$<span class="token operator">/</span>

<span class="token comment">// 带1-2位小数的正数或负数：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span>\\<span class="token operator">-</span><span class="token punctuation">)</span><span class="token operator">?</span>\\d<span class="token operator">+</span><span class="token punctuation">(</span>\\<span class="token punctuation">.</span>\\d<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">?</span>$<span class="token operator">/</span>

<span class="token comment">// 正数、负数、和小数：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span>\\<span class="token operator">-</span><span class="token operator">|</span>\\<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">?</span>\\d<span class="token operator">+</span><span class="token punctuation">(</span>\\<span class="token punctuation">.</span>\\d<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">?</span>$<span class="token operator">/</span>

<span class="token comment">// 有两位小数的正实数 / 金额校验，精确到2位小数：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">?</span>$<span class="token operator">/</span>

二、校验字符的表达式
<span class="token comment">// 汉字：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>\\u4e00<span class="token operator">-</span>\\u9fa5<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// 英文和数字：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>$ 或 <span class="token operator">^</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// 长度为3-20的所有字符：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">.</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// 由26个英文字母组成的字符串：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span>Za<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token operator">/</span>

<span class="token comment">// 由26个大/小写英文字母组成的字符串：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token operator">/</span> 或  <span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token operator">/</span>

<span class="token comment">// 由数字和26个英文字母组成的字符串：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token operator">/</span>

<span class="token comment">// 由数字、26个英文字母或者下划线组成的字符串：</span>
<span class="token operator">/</span><span class="token operator">^</span>\\w<span class="token operator">+</span>$ 或 <span class="token operator">^</span>\\w<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// 中文、英文、数字包括下划线：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>\\u4E00<span class="token operator">-</span>\\u9FA5A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span>9_<span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token operator">/</span>

<span class="token comment">// 可以输入含有^%&amp;&#39;,;=?$\\&quot;等字符：</span>
<span class="token operator">/</span><span class="token punctuation">[</span><span class="token operator">^</span><span class="token operator">%</span><span class="token operator">&amp;</span>&#39;<span class="token punctuation">,</span><span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">?</span>$\\x22<span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">/</span>

<span class="token comment">// 禁止输入含有~的字符：</span>
<span class="token operator">/</span><span class="token punctuation">[</span><span class="token operator">^</span><span class="token operator">~</span>\\x22<span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">/</span>

三、特殊需求表达式
<span class="token comment">// Email地址：</span>
<span class="token operator">/</span><span class="token operator">^</span>\\w<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\\w<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">*</span>@\\w<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\\w<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">*</span>\\<span class="token punctuation">.</span>\\w<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\\w<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">*</span>$<span class="token operator">/</span>

<span class="token comment">// 域名：</span>
<span class="token operator">/</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token operator">?</span><span class="token operator">/</span>

<span class="token comment">// InternetURL：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token function">http</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">?</span><span class="token operator">:</span>\\<span class="token operator">/</span>\\<span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\\w<span class="token operator">-</span><span class="token punctuation">]</span><span class="token operator">+</span>\\<span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">[</span>\\w<span class="token operator">-</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\w-./?%&amp;=]*)?$</span><span class="token regex-delimiter">/</span></span>

<span class="token comment">// 手机号码：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">14</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token operator">|</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">15</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token operator">|</span><span class="token number">3</span><span class="token operator">|</span><span class="token number">5</span><span class="token operator">|</span><span class="token number">6</span><span class="token operator">|</span><span class="token number">7</span><span class="token operator">|</span><span class="token number">8</span><span class="token operator">|</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">18</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token operator">|</span><span class="token number">3</span><span class="token operator">|</span><span class="token number">5</span><span class="token operator">|</span><span class="token number">6</span><span class="token operator">|</span><span class="token number">7</span><span class="token operator">|</span><span class="token number">8</span><span class="token operator">|</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\\d<span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// 电话号码(&quot;XXX-XXXXXXX&quot;、&quot;XXXX-XXXXXXXX&quot;、&quot;XXX-XXXXXXX&quot;、&quot;XXX-XXXXXXXX&quot;、&quot;XXXXXXX&quot;和&quot;XXXXXXXX)：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span>\\<span class="token punctuation">(</span>\\d<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token operator">-</span><span class="token punctuation">)</span><span class="token operator">|</span>\\d<span class="token punctuation">{</span><span class="token number">3.4</span><span class="token punctuation">}</span><span class="token operator">-</span><span class="token punctuation">)</span><span class="token operator">?</span>\\d<span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">}</span>$ <span class="token operator">/</span>

<span class="token comment">// 国内电话号码(0511-4405222、021-87888822)：</span>
<span class="token operator">/</span>\\d<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token operator">-</span>\\d<span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span><span class="token operator">|</span>\\d<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token operator">-</span>\\d<span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token operator">/</span>

<span class="token comment">// 15位身份证：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\\d<span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span>\\d<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">]</span>\\d<span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">3</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\\d<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// 18位身份证：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\\d<span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\\d<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span>\\d<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">]</span>\\d<span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">3</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\\d<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">*</span>\\d<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">}</span>$<span class="token operator">/</span>

<span class="token comment">// 日期格式：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span>\\d<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token operator">-</span>\\d<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token operator">-</span>\\d<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span>\\d<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span>\\<span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d{1,2}\\/\\d{1,2})$</span><span class="token regex-delimiter">/</span></span>

<span class="token comment">// xml文件：</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>\\\\<span class="token punctuation">.</span><span class="token punctuation">[</span>x<span class="token operator">|</span><span class="token constant">X</span><span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token operator">|</span><span class="token constant">M</span><span class="token punctuation">]</span><span class="token punctuation">[</span>l<span class="token operator">|</span><span class="token constant">L</span><span class="token punctuation">]</span>$<span class="token operator">/</span>

<span class="token comment">// 空白行的正则表达式：</span>
<span class="token operator">/</span>\\n\\s<span class="token operator">*</span>\\<span class="token function">r</span> <span class="token punctuation">(</span>可以用来删除空白行<span class="token punctuation">)</span><span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="部分使用区别" tabindex="-1"><a class="header-anchor" href="#部分使用区别" aria-hidden="true">#</a> 部分使用区别</h3><p><strong>?=、?&lt;=、?!、?&lt;! 使用区别</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1</span><span class="token function">、exp1</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span>exp2<span class="token punctuation">)</span>         匹配 exp1 后面是 exp2 的字符串。
<span class="token operator">/</span><span class="token function">runoob</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span><span class="token punctuation">[</span>\\d<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">/</span>g      匹配 runoob 后面是数字的字符串。

<span class="token number">2</span><span class="token function">、</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">&lt;=</span>exp1<span class="token punctuation">)</span>exp2        匹配 exp2 前面是 exp1 的字符串。
<span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">&lt;=</span><span class="token punctuation">[</span>\\d<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span>runoob<span class="token operator">/</span>g     匹配 runoob 前面是数字的字符串。

<span class="token number">3</span><span class="token function">、exp1</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>exp2<span class="token punctuation">)</span>         匹配 exp1 后面不是 exp2 的字符串。
<span class="token operator">/</span><span class="token function">runoob</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span><span class="token punctuation">[</span>\\d<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">/</span>g      匹配 runoob 但后面不是数字的字符串。

<span class="token number">4</span><span class="token function">、</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">&lt;</span><span class="token operator">!</span>exp1<span class="token punctuation">)</span>exp2        匹配 exp2 前面不是 exp1 的字符串。
<span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token punctuation">[</span>\\d<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span>runoob<span class="token operator">/</span>g     匹配 runoob 前面不是数字的字符串。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function v(x,g){const a=p("ExternalLinkIcon");return e(),o("div",null,[i,n("h3",k,[d,s(),n("a",m,[s("测试工具"),l(a)])]),b])}const y=t(u,[["render",v],["__file","RegExp.html.vue"]]);export{y as default};
