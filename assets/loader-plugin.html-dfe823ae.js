import{_ as e,p as a,q as r,a1 as d}from"./framework-347dbdeb.js";const o={},c=d('<h2 id="loader和plugin" tabindex="-1"><a class="header-anchor" href="#loader和plugin" aria-hidden="true">#</a> Loader和Plugin</h2><h3 id="loader" tabindex="-1"><a class="header-anchor" href="#loader" aria-hidden="true">#</a> Loader</h3><p>直译为&quot;加载器&quot;。Webpack 将一切文件视为模块，但是webpack原生是只能解析 js 文件，如果想将其他文件也打包的话，就会用到 <code>loader</code>。 所以 Loader 的作用是让 webpack 拥有了加载和解析非 JavaScript 文件的能力。</p><h3 id="plugin" tabindex="-1"><a class="header-anchor" href="#plugin" aria-hidden="true">#</a> Plugin</h3><p>直译为&quot;插件&quot;。Plugin 可以扩展 webpack 的功能，让 webpack 具有更多的灵活性。 在 Webpack 运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。</p>',5),n=[c];function i(t,l){return a(),r("div",null,n)}const p=e(o,[["render",i],["__file","loader-plugin.html.vue"]]);export{p as default};
