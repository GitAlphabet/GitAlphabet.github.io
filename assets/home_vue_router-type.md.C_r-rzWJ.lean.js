import{_ as a,c as s,a2 as i,o as t}from"./chunks/framework.BQmytedh.js";const u=JSON.parse('{"title":"路由模式","description":"","frontmatter":{},"headers":[],"relativePath":"home/vue/router-type.md","filePath":"home/vue/router-type.md","lastUpdated":1732262625000}'),o={name:"home/vue/router-type.md"};function l(h,e,r,n,d,c){return t(),s("div",null,e[0]||(e[0]=[i(`<h1 id="路由模式" tabindex="-1">路由模式 <a class="header-anchor" href="#路由模式" aria-label="Permalink to &quot;路由模式&quot;">​</a></h1><ul><li>hash 模式</li><li>H5 history 模式</li></ul><h2 id="hash-模式" tabindex="-1">hash 模式 <a class="header-anchor" href="#hash-模式" aria-label="Permalink to &quot;hash 模式&quot;">​</a></h2><ul><li><code>hash</code> 变化会触发路由的跳转，即浏览器的前进或者后退</li><li><code>hash</code> 变化不会刷新页面，<code>spa</code>必需的特点</li><li><code>hash</code> 永远不会提交到 <code>server</code> 端</li></ul><div class="language-md vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.onhashchange 监听 hash 的变化。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">location.href = &#39;#login&#39;。修改 hash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="h5-history-模式" tabindex="-1">H5 history 模式 <a class="header-anchor" href="#h5-history-模式" aria-label="Permalink to &quot;H5 history 模式&quot;">​</a></h2><ul><li>用<code>url</code>规范路由，但跳转时不刷新页面</li><li><code>history.pushState</code></li><li><code>window.onpopstate</code></li></ul>`,7)]))}const m=a(o,[["render",l]]);export{u as __pageData,m as default};
