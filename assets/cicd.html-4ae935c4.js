import{_ as s,p as a,q as e,Q as t,a1 as n}from"./framework-39b99327.js";const l={},i=n(`<h2 id="vuepres-自动部署" tabindex="-1"><a class="header-anchor" href="#vuepres-自动部署" aria-hidden="true">#</a> Vuepres 自动部署</h2><h3 id="ci-cd简介" tabindex="-1"><a class="header-anchor" href="#ci-cd简介" aria-hidden="true">#</a> CI/CD简介</h3><ul><li>持续集成(CI-Continuous integration) <ul><li>开发者在开发不同功能代码的过程当中，可以频繁的将代码行合并到一起并互不影响工作</li></ul></li><li>持续部署(CD-continuous deployment) <ul><li>基于某种工具或平台实现代码自动化构建、测试和部署以实现交付高质量的产品</li></ul></li><li>持续交付(Continuous Delivery) <ul><li>基于持续部署的基础之上，将产品交付到线上环境</li></ul></li></ul><h3 id="配置deploy-key" tabindex="-1"><a class="header-anchor" href="#配置deploy-key" aria-hidden="true">#</a> 配置deploy key</h3><ul><li>生成 deploy key</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-b</span> <span class="token number">4096</span> <span class="token parameter variable">-C</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> config user.email<span class="token variable">)</span></span>&quot;</span> <span class="token parameter variable">-f</span> gh-pages <span class="token parameter variable">-N</span> <span class="token string">&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),p=n(`<p><code>gh-pages.pub</code> is a public key <code>gh-pages</code> is a private key</p><ul><li>仓库配置 <ul><li><code>public key</code> 配置到 Deplay Keys</li><li><code>private key</code> 配置到 <code>Secrets</code>（这里配置私有变量） 并添加自定义名称 <code>ACTIONS_DEPLOY_KEY</code></li></ul></li></ul><h3 id="新建部署文件" tabindex="-1"><a class="header-anchor" href="#新建部署文件" aria-hidden="true">#</a> 新建部署文件</h3><p>.github --&gt; wordflows 下新建 <code>main.yml</code> 文件</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Build and Publish

<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>master<span class="token punctuation">]</span>

<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">build</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> checkout
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v1

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Node.js environment <span class="token comment"># 配置 Node 环境</span>
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v3.2.0 <span class="token comment"># 配置脚本来自 https://github.com/actions/setup-node</span>
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">&quot;14.x&quot;</span>
    
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> install deps
        <span class="token key atrule">run</span><span class="token punctuation">:</span> yarn install

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> build
        <span class="token key atrule">run</span><span class="token punctuation">:</span> yarn docs<span class="token punctuation">:</span>build

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> deploy
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> peaceiris/actions<span class="token punctuation">-</span>gh<span class="token punctuation">-</span>pages@v3.7.3 <span class="token comment"># https://github.com/marketplace/actions/github-pages-action</span>
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">deploy_key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.ACTIONS_DEPLOY_KEY <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment"># 仓库配置的私有变量</span>
          <span class="token comment"># external_repository: GitAlphabet/GitAlphabet.github.io</span>
          <span class="token comment"># publish_branch: master # 推送的分支</span>
          <span class="token key atrule">external_repository</span><span class="token punctuation">:</span> GitAlphabet/blog
          <span class="token key atrule">publish_branch</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages
          <span class="token key atrule">publish_dir</span><span class="token punctuation">:</span> docs/.vuepress/dist  <span class="token comment"># 推送的内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="部署注意点" tabindex="-1"><a class="header-anchor" href="#部署注意点" aria-hidden="true">#</a> 部署注意点</h3><p>GitHub 免费计划帐户不能使用私有存储库中的 GitHub 页面。 要将源内容设为私有并使用 GitHub Pages 进行部署，您可以使用此选项将站点从私有存储库部署到公共存储库。</p><p><strong>当您使用 时deploy_key，将您的私钥设置为包含此操作的存储库，并将您的公钥设置为您的外部存储库。</strong><strong>vuepress 的配置文件的 base 修改为 <code>/</code></strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">external_repository</span><span class="token punctuation">:</span> GitAlphabet/GitAlphabet.github.io <span class="token comment"># 外部存储库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9);function c(o,u){return a(),e("div",null,[i,t(" 你会得到两个文件 "),p])}const d=s(l,[["render",c],["__file","cicd.html.vue"]]);export{d as default};
