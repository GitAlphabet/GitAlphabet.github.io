(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{426:function(e,r,s){"use strict";s.r(r);var t=s(42),a=Object(t.a)({},(function(){var e=this,r=e.$createElement,s=e._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"vue-面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-面试题"}},[e._v("#")]),e._v(" Vue 面试题")]),e._v(" "),s("h4",{attrs:{id:"_1、proxy-与-object-defineproperty-优劣对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、proxy-与-object-defineproperty-优劣对比"}},[e._v("#")]),e._v(" 1、Proxy 与 Object.defineProperty 优劣对比")]),e._v(" "),s("p",[e._v("Proxy 的优势如下:")]),e._v(" "),s("div",{staticClass:"language-md line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-md"}},[s("code",[e._v("Proxy 可以直接监听对象而非属性；\nProxy 可以直接监听数组的变化；\nProxy 有多达 13 种拦截方法,不限于 apply、ownKeys、deleteProperty、has 等等是 Object.defineProperty 不具备的；\nProxy 返回的是一个新对象,我们可以只操作新的对象达到目的,而 Object.defineProperty 只能遍历对象属性直接修改；\nProxy 作为新标准将受到浏览器厂商重点持续的性能优化，也就是传说中的新标准的性能红利；\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("Object.defineProperty 的优势如下:")]),e._v(" "),s("div",{staticClass:"language-md line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-md"}},[s("code",[e._v("兼容性好，支持 IE9，而 Proxy 的存在浏览器兼容性问题,而且无法用 polyfill 磨平\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])])}),[],!1,null,null,null);r.default=a.exports}}]);