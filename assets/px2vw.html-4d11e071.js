import{_ as n,p as s,q as a,a1 as e}from"./framework-39b99327.js";const p={},t=e(`<h2 id="px2vw" tabindex="-1"><a class="header-anchor" href="#px2vw" aria-hidden="true">#</a> px2vw</h2><h3 id="rem对比vw优缺点" tabindex="-1"><a class="header-anchor" href="#rem对比vw优缺点" aria-hidden="true">#</a> rem对比vw优缺点</h3><ul><li><p><code>rem</code>:</p><ul><li>和根元素<code>font-size</code>值强耦合，系统字体放大或缩小时，会导致布局错乱；</li><li>html文件头部需插入一段js代码</li></ul></li><li><p><code>vw</code>:</p><ul><li>vw单位兼容性比<code>rem</code>稍差，ios8、安卓4.4及以上才完全支持。</li></ul></li></ul><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># npm</span>
$ <span class="token function">npm</span> <span class="token function">install</span> postcss-px-to-viewport --save-dev
<span class="token comment"># yarn</span>
$ <span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> postcss-px-to-viewport
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">unitToConvert</span><span class="token operator">:</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">,</span> 
  <span class="token literal-property property">viewportWidth</span><span class="token operator">:</span> <span class="token number">320</span><span class="token punctuation">,</span> 
  <span class="token literal-property property">unitPrecision</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> 
  <span class="token literal-property property">propList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">viewportUnit</span><span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">fontViewportUnit</span><span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">selectorBlackList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">minPixelValue</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mediaQuery</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">landscape</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">landscapeUnit</span><span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">landscapeWidth</span><span class="token operator">:</span> <span class="token number">568</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>unitToConvert</code> (String) 需要转换的单位，默认为&quot;px&quot;</li><li><code>viewportWidth</code> (Number) 设计稿的视口宽度</li><li><code>unitPrecision</code> (Number) 单位转换后保留的精度</li><li><code>propList</code> (Array) 能转化为vw的属性列表 <ul><li>传入特定的CSS属性；</li><li>可以传入通配符&quot;&quot;去匹配所有属性，例如：[&#39;&#39;]；</li><li>在属性的前或后添加&quot;*&quot;,可以匹配特定的属性. (例如[&#39;position&#39;] 会匹配 background-position-y)</li><li>在特定属性前加 &quot;!&quot;，将不转换该属性的单位 . 例如: [&#39;*&#39;, &#39;!letter-spacing&#39;]，将不转换letter-spacing</li><li>&quot;!&quot; 和 &quot;&quot;可以组合使用， 例如: [&#39;&#39;, &#39;!font*&#39;]，将不转换font-size以及font-weight等属性</li></ul></li><li><code>viewportUnit</code> (String) 希望使用的视口单位</li><li><code>fontViewportUnit</code> (String) 字体使用的视口单位</li><li><code>selectorBlackList</code> (Array) 需要忽略的CSS选择器，不会转为视口单位，使用原有的px等单位。 <ul><li>如果传入的值为字符串的话，只要选择器中含有传入值就会被匹配 <ul><li>例如 selectorBlackList 为 [&#39;body&#39;] 的话， 那么 .body-class 就会被忽略</li></ul></li><li>如果传入的值为正则表达式的话，那么就会依据CSS选择器是否匹配该正则 <ul><li>例如 selectorBlackList 为 [/^body$/] , 那么 body 会被忽略，而 .body 不会</li></ul></li></ul></li><li><code>minPixelValue</code> (Number) 设置最小的转换数值，如果为1的话，只有大于1的值会被转换</li><li><code>mediaQuery</code> (Boolean) 媒体查询里的单位是否需要转换单位</li><li><code>replace</code> (Boolean) 是否直接更换属性值，而不添加备用属性</li><li><code>exclude</code> (Array or Regexp) 忽略某些文件夹下的文件或特定文件，例如 &#39;node_modules&#39; 下的文件 <ul><li>如果值是一个正则表达式，那么匹配这个正则的文件会被忽略</li><li>如果传入的值是一个数组，那么数组里的值必须为正则</li></ul></li><li><code>landscape</code> (Boolean) 是否添加根据 landscapeWidth 生成的媒体查询条件 @media (orientation: landscape)</li><li><code>landscapeUnit</code> (String) 横屏时使用的单位</li><li><code>landscapeWidth</code> (Number) 横屏时使用的视口宽度</li></ul><h3 id="postcss-config-js" tabindex="-1"><a class="header-anchor" href="#postcss-config-js" aria-hidden="true">#</a> postcss.config.js</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token string-property property">&#39;postcss-px-to-viewport&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// options</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[t];function l(i,r){return s(),a("div",null,o)}const d=n(p,[["render",l],["__file","px2vw.html.vue"]]);export{d as default};
