import{_ as s,p as n,q as a,a1 as e}from"./framework-5866ffd3.js";const p={},o=e(`<h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h3><div class="custom-container tip"><p class="custom-container-title">提示</p><p>开发中我们需要针对不同环境（开发环境、集成环境、生产环境等），进行相应策略的打包（比如是否替换接口地址，代码是否压缩等）。webpack 就是通过 p<wbr>rocess.env 属性加以区分。</p></div><p>webpack 的运行依赖于 node 的环境。p<wbr>rocess.env 就是 Nodejs 提供的一个 API，它返回一个包含用户环境信息的对象。如果我们给 Nodejs 设置一个环境变量，并把它挂载在 p<wbr>rocess.env 返回的对象上，便可以在代码中进行相应的环境判断。</p><h4 id="_1、process-env" tabindex="-1"><a class="header-anchor" href="#_1、process-env" aria-hidden="true">#</a> 1、p<wbr>rocess.env</h4><p>通常的做法是，新建一个环境变量 NODE_ENV，用它确定当前所处的开发阶段，生产阶段设为 production，开发阶段设为 development 或 staging，然后在脚本中读取 p<wbr>rocess.env.NODE_ENV 即可。 要说明的是，NODE_ENV 这个名称只是开发社区的一种共识，名称是可以修改的。</p><p>在 Webpack 配置文件中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// webpack.config.js
module.exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  mode: p<wbr>rocess.env.NODE_ENV <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">&#39;production&#39;</span> ? <span class="token string">&#39;production&#39;</span> <span class="token builtin class-name">:</span> <span class="token string">&#39;development&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、设置-process-env-node-env-环境变量" tabindex="-1"><a class="header-anchor" href="#_2、设置-process-env-node-env-环境变量" aria-hidden="true">#</a> 2、设置 p<wbr>rocess.env.NODE_ENV 环境变量</h4><p>p<wbr>rocess.env 是 Nodejs 提供的一个 API，那么如果想用 p<wbr>rocess.env.NODE_ENV，就必须先设置其值才能用。 但是如何设置 这个 p<wbr>rocess.env.NODE_ENV 环境变量呢？在 webpack 项目里，我们可以通过设置 package.json 来实现，但是 Windows 系统和 Mac 系统有区别。</p><p>Windows 系统</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;set NODE_ENV=development &amp;&amp;  webpack-dev-server --open --hot&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;set NODE_ENV=production &amp;&amp;   --progress --hide-modules&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mac 系统</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;export NODE_ENV=development &amp;&amp;  webpack-dev-server --open --hot&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;export NODE_ENV=production &amp;&amp;   --progress --hide-modules&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么问题又来了，我在 Windows 开发部署的项目，可能在 Mac 系统无法正常打包，反之亦然。为了解决这个问题，有人就开发了 cross-env。</p><p>cross-env 是一个跨平台设置环境变量的第三方包，它可以让你只配置一行命令，就能轻松地在多个平台设置环境变量。首先先安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev cross-env
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后配置 package.json 就可以了</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=development webpack-dev-server --open --hot&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=production webpack --mode=production  --progress --hide-modules&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),t=[o];function r(i,c){return n(),a("div",null,t)}const d=s(p,[["render",r],["__file","processEnv.html.vue"]]);export{d as default};
