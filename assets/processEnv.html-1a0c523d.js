import{_ as s,p as n,q as e,a1 as a}from"./framework-1c630d00.js";const o={},p=a(`<h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h2><div class="custom-container tip"><p class="custom-container-title">提示</p><p>开发中我们需要针对不同环境（开发环境、集成环境、生产环境等），进行相应策略的打包（比如是否替换接口地址，代码是否压缩等）。<code>webpack</code> 就是通过 <code>p<wbr>rocess.env</code> 属性加以区分。</p></div><p><code>webpack</code> 的运行依赖于 <code>node</code> 的环境。<code>p<wbr>rocess.env</code> 就是 <code>Nodejs</code> 提供的一个 API，它返回一个包含用户环境信息的对象。如果我们给 <code>Nodejs</code> 设置一个环境变量，并把它挂载在 <code>p<wbr>rocess.env</code> 返回的对象上，便可以在代码中进行相应的环境判断。</p><h3 id="process-env" tabindex="-1"><a class="header-anchor" href="#process-env" aria-hidden="true">#</a> p<wbr>rocess.env</h3><p>通常的做法是，新建一个环境变量<code> NODE_ENV</code>，用它确定当前所处的开发阶段，生产阶段设为 <code>production</code>，开发阶段设为 <code>development</code> 或 <code>staging</code>，然后在脚本中读取 <code>p<wbr>rocess.env.NODE_ENV</code> 即可。 要说明的是，<code>NODE_ENV</code> 这个名称只是开发社区的一种共识，名称是可以修改的。</p><p>在 Webpack 配置文件中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// webpack.config.js
module.exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  mode: p<wbr>rocess.env.NODE_ENV <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">&#39;production&#39;</span> ? <span class="token string">&#39;production&#39;</span> <span class="token builtin class-name">:</span> <span class="token string">&#39;development&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置" tabindex="-1"><a class="header-anchor" href="#设置" aria-hidden="true">#</a> 设置</h3><p><code>p<wbr>rocess.env</code> 是 <code>Nodejs</code> 提供的一个 <code>API</code>，那么如果想用 <code>p<wbr>rocess.env.NODE_ENV</code>，就必须先设置其值才能用。 但是如何设置 这个 <code>p<wbr>rocess.env.NODE_ENV</code> 环境变量呢？在 <code>webpack</code> 项目里，我们可以通过设置 <code>package.json</code> 来实现，但是 <code>Windows</code> 系统和 <code>Mac</code> 系统有区别。</p><p><code>Windows</code> 系统</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;set NODE_ENV=development &amp;&amp;  webpack-dev-server --open --hot&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;set NODE_ENV=production &amp;&amp;   --progress --hide-modules&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Mac</code> 系统</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;export NODE_ENV=development &amp;&amp;  webpack-dev-server --open --hot&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;export NODE_ENV=production &amp;&amp;   --progress --hide-modules&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么问题又来了，我在 <code>Windows</code> 开发部署的项目，可能在 <code>Mac</code> 系统无法正常打包，反之亦然。为了解决这个问题，有人就开发了 <code>cross-env</code>。</p><p><code>cross-env</code> 是一个跨平台设置环境变量的第三方包，它可以让你只配置一行命令，就能轻松地在多个平台设置环境变量。首先先安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev cross-env
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后配置 <code>package.json</code> 就可以了</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=development webpack-dev-server --open --hot&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=production webpack --mode=production  --progress --hide-modules&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),c=[p];function t(d,r){return n(),e("div",null,c)}const l=s(o,[["render",t],["__file","processEnv.html.vue"]]);export{l as default};
