import{_ as t,c as e,o as l,a3 as a}from"./chunks/framework.D5qxx6u8.js";const o="/assets/reactHook.Co-XWDJO.png",_=JSON.parse('{"title":"生命周期","description":"","frontmatter":{},"headers":[],"relativePath":"home/react/life-cycle.md","filePath":"home/react/life-cycle.md","lastUpdated":1717945168000}'),d={name:"home/react/life-cycle.md"},i=a('<h1 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h1><p><img src="'+o+'" alt="&quot;React 生命周期&quot;" title="React 生命周期"></p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">生命周期函数</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">initializztion</td><td style="text-align:left;">初始化</td></tr><tr><td style="text-align:left;">componentWillMount</td><td style="text-align:left;">组件挂载前</td></tr><tr><td style="text-align:left;">render</td><td style="text-align:left;">渲染</td></tr><tr><td style="text-align:left;">componentDidMount</td><td style="text-align:left;">组件挂载</td></tr><tr><td style="text-align:left;">componentWillReceiveProps</td><td style="text-align:left;">组件接收到 props</td></tr><tr><td style="text-align:left;">shouldComponentUpdate</td><td style="text-align:left;">是否更新组件</td></tr><tr><td style="text-align:left;">componentWillUpdate</td><td style="text-align:left;">组件更新前</td></tr><tr><td style="text-align:left;">componentDidUpdate</td><td style="text-align:left;">组件更新</td></tr><tr><td style="text-align:left;">componentWillUnmount</td><td style="text-align:left;">组件移除挂载钱</td></tr></tbody></table><h2 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li><code>initializztion</code>: <ul><li><code>class</code> 类里面的 <code>constructor</code> 函数里面执行，初始化 <code>state</code>,<code>props</code></li></ul></li><li><code>componentWillReceivePropsnextProps</code>:</li><li>只要父组件的 <code>render</code> 函数重新（第一次存在不执行，之前已经存在存在父组件中会被执行）被执行才会执行。</li><li><code>shouldComponentUpdate(nextProps,nextState)</code>:</li><li>返回 true/false 是否更新（即调用render函数），一般做性能优化。</li></ul></div>',6),n=[i];function r(c,s,p,f,h,x){return l(),e("div",null,n)}const u=t(d,[["render",r]]);export{_ as __pageData,u as default};
