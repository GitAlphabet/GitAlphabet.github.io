import{_ as a,p as n,q as e,a1 as s}from"./framework-1c630d00.js";const o={},c=s(`<h2 id="chrome-devtools" tabindex="-1"><a class="header-anchor" href="#chrome-devtools" aria-hidden="true">#</a> Chrome DevTools</h2><h3 id="显示标尺" tabindex="-1"><a class="header-anchor" href="#显示标尺" aria-hidden="true">#</a> 显示标尺</h3><p>通过以下两种方式之一启用标尺：</p><ul><li>按<code>Control+ Shift+P</code>或<code>Command+ Shift+ P(Mac)</code> 打开命令菜单，键入<code>Show rulers on hover</code>，然后按Enter。</li><li>检查设置“设置” &gt; “首选项” &gt; “元素” &gt; “悬停时显示标尺”。</li></ul><h3 id="隐藏元素" tabindex="-1"><a class="header-anchor" href="#隐藏元素" aria-hidden="true">#</a> 隐藏元素</h3><p>选中节点，按 H 键即隐藏，再次点击显示。</p><h3 id="删除元素" tabindex="-1"><a class="header-anchor" href="#删除元素" aria-hidden="true">#</a> 删除元素</h3><p>选中节点，按 <code>Delete</code> 键即删除</p><h3 id="查看元素属性" tabindex="-1"><a class="header-anchor" href="#查看元素属性" aria-hidden="true">#</a> 查看元素属性</h3><p>选中节点，选择 <code>Properties</code></p><h3 id="css颜色" tabindex="-1"><a class="header-anchor" href="#css颜色" aria-hidden="true">#</a> css颜色</h3><p>选中节点，颜色选择器color提供了用于更改和声明的GUI ，让您只需单击*-color即可创建、转换（shift + click）和调试(click)非高清和高清颜色。</p><h3 id="条件断点" tabindex="-1"><a class="header-anchor" href="#条件断点" aria-hidden="true">#</a> 条件断点</h3><p>设置条件代码行断点：</p><ul><li>打开“来源”选项卡。</li><li>打开包含要中断的代码行的文件。</li><li>转到代码行。</li><li>代码行的左侧是行号列。<strong>右键单击它</strong>。</li><li>选择添加条件断点。代码行下方会显示一个对话框。</li><li>在对话框中输入您的条件。</li><li>按Enter激活断点。带问号的橙色图标出现在行号列的顶部。</li></ul><h3 id="函数断点" tabindex="-1"><a class="header-anchor" href="#函数断点" aria-hidden="true">#</a> 函数断点</h3><p>Call <code>debug(functionName)</code>，当<code>functionName</code>您想要在调用特定函数时暂停时，您要调试的函数在哪里。您可以插入<code>debug()</code>代码（如<code>console.log()</code>语句）或从 DevTools 控制台调用它。<code>debug()</code>相当于在函数的第一行设置代码行断点。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token comment">// DevTools pauses on this line.</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">debug</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Pass the function object, not a string.</span>
<span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),t=[c];function i(l,d){return n(),e("div",null,t)}const p=a(o,[["render",i],["__file","chrome.html.vue"]]);export{p as default};
