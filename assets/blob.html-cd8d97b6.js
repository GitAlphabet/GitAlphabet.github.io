import{_ as n,p as s,q as a,a1 as t}from"./framework-39b99327.js";const e={},p=t(`<h2 id="blob" tabindex="-1"><a class="header-anchor" href="#blob" aria-hidden="true">#</a> Blob</h2><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span>
<span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>参数</p><ul><li>array<br> 一个可迭代对象，比如 Array，包含 <code>ArrayBuffer</code>、<code>TypedArray</code>、<code>DataView</code>、<code>Blob</code>、字符串或者任意这些元素的混合，这些元素将会被放入 <code>Blob</code> 中。字符串应该是格式良好的 <code>Unicode</code>，而单独代理项（lone surrogate）会使用和 <code>String.prototype.toWellFormed()</code> 相同的算法进行清理。</li><li>options 可选<br> 一个可以指定以下任意属性的对象： <ul><li>type 可选<br> 将会被存储到 <code>blob</code> 中的数据的 MIME 类型。默认值是空字符（&quot;&quot;）。</li><li>endings 可选 非标准<br> 如果数据是文本，那么如何解释其中的换行符（\\n）。默认值 <code>transparent</code> 会将换行符复制到 <code>blob</code> 中而不会改变它们。要将换行符转换为主机系统的本地约定，请指定值 <code>native</code>。</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 一个包含单个字符串的数组</span>
<span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;&lt;q id=&quot;a&quot;&gt;&lt;span id=&quot;b&quot;&gt;hey!&lt;/span&gt;&lt;/q&gt;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
<span class="token comment">// 得到 blob</span>
<span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;text/html&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h3><ul><li>Blob.size 返回 Blob 或 File 的字节数。</li><li>Blob.type 返回 文件的 MIME 类型。</li></ul><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h3><ul><li>arrayBuffer() 方法返回一个 Promise，其会兑现一个包含 blob 二进制数据内容的 ArrayBuffer。</li><li>slice() 方法创建并返回一个新的 Blob 对象，该对象包含调用它的 blob 的子集中的数据。（切片上传） <ul><li>slice()</li><li>slice(start)</li><li>slice(start, end)</li><li>slice(start, end, contentType)</li></ul></li><li>stream() 方法返回一个 ReadableStream 对象，读取它将返回包含在 Blob 中的数据</li><li>text() 方法返回一个 Promise，其会兑现一个包含 blob 内容的 UTF-8 格式的字符串。</li></ul><h3 id="下载" tabindex="-1"><a class="header-anchor" href="#下载" aria-hidden="true">#</a> 下载</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">downloadFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建 Blob 对象</span>
    <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 判断当前浏览器是否是IE，由于IE是没有download 方法的，需要用msSaveBlob() 或 msSaveOrOpenBlob()</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>navigator <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>msSaveOrOpenBlob<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 兼容IE</span>
        window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span><span class="token function">msSaveOrOpenBlob</span><span class="token punctuation">(</span>blob<span class="token punctuation">,</span> filename<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建 URL 对象</span>
        <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建链接</span>
        <span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        link<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
        link<span class="token punctuation">.</span>download <span class="token operator">=</span> filename<span class="token punctuation">;</span>

        <span class="token comment">// 模拟点击链接进行下载</span>
        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span>
        link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 释放 URL 对象</span>
        <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在使用请求的时候，加上responseType: &#39;blob&#39;入参。请求示例如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json;charset=utf-8&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//\`responseType\` 表示浏览器将要响应的数据类型,选项有&#39;arraybuffer&#39;, &#39;document&#39;, &#39;json&#39;, &#39;text&#39;, &#39;stream&#39;,浏览器专属：&#39;blob&#39;,默认是&#39;json&#39;</span>
  <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;blob&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;#&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">downloadFile</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&#39;文件名称&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;application/xlsx&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","blob.html.vue"]]);export{r as default};
